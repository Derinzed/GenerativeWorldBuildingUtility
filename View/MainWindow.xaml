<Window x:Class="GenerativeWorldBuildingUtility.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:dw="clr-namespace:DrWPF.Windows.Controls"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GenerativeWorldBuildingUtility.View"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <!-- Load this specific theme because the Aero theme for CheckBox has issues. -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PresentationFramework.Royale;V3.0.0.0;31bf3856ad364e35;component\themes\royale.normalcolor.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
                <Setter Property="IsExpanded" Value="True" />
                <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                <Setter Property="dw:VirtualToggleButton.IsVirtualToggleButton" Value="True" />
                <Setter Property="dw:VirtualToggleButton.IsChecked" Value="{Binding Active}" />
            </Style>

            <HierarchicalDataTemplate  x:Key="CheckBoxItemTemplate" ItemsSource="{Binding Children, Mode=OneTime}">
                <StackPanel Orientation="Horizontal">
                    <!-- These elements are bound to a FooViewModel object. -->
                    <CheckBox Focusable="False" IsChecked="{Binding Active}" VerticalAlignment="Center"/>
                    <ContentPresenter Content="{Binding Name, Mode=OneTime}" Margin="2,0"/>
                </StackPanel>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="573*"/>
            <ColumnDefinition Width="227*"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="label" Content="Multi Use Generator - Pre-Alpha build" HorizontalAlignment="Left" Height="66" Margin="84,18,0,0" VerticalAlignment="Top" Width="632" FontSize="35" FontWeight="Bold" Grid.ColumnSpan="2"/>
        <Image x:Name="image" HorizontalAlignment="Left" Margin="10,0,0,10" Width="139" RenderTransformOrigin="0.257,0.504" Source="/RoguishCartographer.png" Height="131" VerticalAlignment="Bottom"/>
        <TextBox x:Name="PromptReturn" Margin="198,248,10,20" ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" Text="{Binding BoundProperties.PromptResult}"/>
        <Label x:Name="label1" Content="What would you like to generate?" HorizontalAlignment="Center" Height="35" Margin="0,117,0,0" VerticalAlignment="Top" Width="232"/>
        <ComboBox x:Name="comboBox" Margin="198,157,10,0" Height="24" VerticalAlignment="Top" ItemsSource="{Binding BoundProperties.LoadedPrompts, Mode=TwoWay}" SelectedValue="{Binding BoundProperties.SelectedPrompt, Mode=TwoWay}"/>
        <Button x:Name="GenerateButton" Content="Generate" Height="26" Margin="198,199,201,0" VerticalAlignment="Top" Command="{Binding GeneratePrompt}"/>
        <TreeView x:Name="treeView" Grid.Column="1" Margin="39,157,38,20" ItemContainerStyle="{StaticResource TreeViewItemStyle}" ItemsSource="{Binding RandomElements, Mode=OneTime}" ItemTemplate="{StaticResource CheckBoxItemTemplate}"/>
        <GridSplitter x:Name="gridSplitter" Grid.Column="1" HorizontalAlignment="Left" Margin="10,186,0,75" Width="5"/>
        <Button x:Name="SaveButton" Content="Save" Height="26" Margin="0,199,19,0" VerticalAlignment="Top" Command="{Binding SavePrompt}" HorizontalAlignment="Right" Width="174"/>
        <Label x:Name="label2" Content="AI Model:" HorizontalAlignment="Left" Margin="14,156,0,0" VerticalAlignment="Top"/>
        <ComboBox x:Name="AIModel" HorizontalAlignment="Left" Margin="84,158,0,0" VerticalAlignment="Top" Width="77" ItemsSource="{Binding BoundProperties.AIModels, Mode=TwoWay}" SelectedItem="{Binding BoundProperties.SelectedAIModel, Mode=TwoWay}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding AIModelChange}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ComboBox>

    </Grid>

</Window>
